name: iOS Build and Deploy

on:
  push:
    branches:
      - main
  workflow_dispatch:

jobs:
  build:
    name: Build iOS App
    runs-on: macos-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          ruby-version: 3.0

      - name: Install Fastlane
        run: |
          gem install fastlane    

      - name: Set up Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: '15.2'

      - name: Create AuthKey.json
        run: |
          echo '{
            "key_id": "${{ secrets.APPSTORE_API_KEY_ID }}",
            "issuer_id": "${{ secrets.APPSTORE_ISSUER_ID }}",
            "key": "${{ secrets.APPSTORE_API_PRIVATE_KEY }}",
            "is_key_content_base64": true,
            "in_house": false
          }' > AuthKey.json

      - name: Fastlane Match - App Store
        env:
          GIT_PAT: ${{ secrets.GIT_PAT }}  # Le token d'accès personnel pour accéder au dépôt des certificats
          MATCH_PASSWORD: ${{ secrets.MATCH_PASSWORD }}  # Si vous avez un mot de passe pour le stockage des certificats
        run: |
          fastlane match appstore --api_key_path AuthKey.json --git_url "https://$GIT_PAT@github.com/nadjem/matchFast.git"

      - name: Build and Archive
        run: |
          xcodebuild -workspace YourApp.xcworkspace \
            -scheme YourApp \
            -sdk iphoneos \
            -configuration Release \
            -archivePath $PWD/build/YourApp.xcarchive \
            clean archive \
            -allowProvisioningUpdates

      - name: Export IPA
        run: |
          xcodebuild -exportArchive \
            -archivePath $PWD/build/YourApp.xcarchive \
            -exportOptionsPlist ExportOptions.plist \
            -exportPath $PWD/build

      - name: Upload to TestFlight
        env:
          APP_STORE_CONNECT_API_KEY: ${{ secrets.APPSTORE_API_PRIVATE_KEY }}
          APP_STORE_CONNECT_API_ISSUER_ID: ${{ secrets.APPSTORE_ISSUER_ID }}
          APP_STORE_CONNECT_API_KEY_ID: ${{ secrets.APPSTORE_API_KEY_ID }}
        run: |
          echo "${{ secrets.APP_STORE_CONNECT_API_KEY }}" > AuthKey.p8
          xcrun altool --upload-app -f $PWD/build/YourApp.ipa \
            --type ios \
            --apiKey $APP_STORE_CONNECT_API_KEY_ID \
            --apiIssuer $APP_STORE_CONNECT_API_ISSUER_ID \
            --apiKey AuthKey.p8
